---
#
# C L E A N
#
- name: Stop AMQ by run stop-amq task from amq role
  import_role:
    name: amq
    tasks_from: stop-amq
  when: mom == "amq"

- name: Stop Artemis by run stop-artemis task from artemis role
  import_role:
    name: artemis
    tasks_from: stop-artemis
  when: mom == "artemis"
#
# I N S T A L L A T I O N
#
- name: Create directory for Java
  file:
    state: directory
    path: "{{ install_folder }}/{{ java.folder }}"
    owner: root
    group: root
    mode: 0755
  become: true

- name: Veirfy if Java local archive exists
  stat:
    path: "{{ role_path }}/files/{{ java.archive }}"
  delegate_to: localhost
  register: java_check_local_archive

- name: Copy Java archive which is placed locally if it exists
  copy:
    src: "{{ java.archive }}"
    dest: "{{ install_folder }}"
    owner: root
    group: root
    mode: 0664
  become: true
  when: java_check_local_archive.stat.exists
  register: java_copy_local_archive

- name: Verify if Java archive already exists on the host
  stat:
    path: "{{ install_folder }}/{{ java.archive }}"
  when: not java_check_local_archive.stat.exists
  register: java_check_archive

- name: Download Java if archive doesn't exist
  get_url:
    url: "{{ java.url }}/{{ java.archive }}"
    dest: "{{ install_folder }}"
    headers:
      Cookie: "oraclelicense=accept-securebackup-cookie"
    owner: root
    group: root
    mode: 0664
  become: true
  when:
    - not java_check_local_archive.stat.exists
    - java_check_archive.stat.isreg is not defined

- name: Verify if Java archive was already unpacked
  find:
    paths: "{{ install_folder }}/{{ java.folder }}"
    recurse: yes
    patterns: "*"
  register: java_folder_content

- name: Unpack Java archive if destination folder is empty
  unarchive:
    src: "{{ install_folder }}/{{ java.archive }}"
    dest: "{{ install_folder }}/{{ java.folder }}"
    owner: root
    group: root
    remote_src: yes
    extra_opts: ['--strip-components=1']
  become: true
  when: java_folder_content.matched == 0

- name: Create Java symlink
  file:
    state: link
    src: "{{ install_folder }}/{{ java.folder }}"
    path: "{{ install_folder }}/{{ java.symlink }}"
    owner: root
    group: root
  become: true

#
# C O N F I G U R A T I O N
#
- name: Set Java networkaddress.cache.ttl
  lineinfile:
    path: "{{ install_folder }}/{{ java.folder }}/jre/lib/security/java.security"
    line: 'networkaddress.cache.ttl={{ java.ttl }}'
    regexp: '^networkaddress\.cache\.ttl=.*$'
    insertafter: '^\#networkaddress\.cache\.ttl=-1$'
    state: present
  become: true

